<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ScoreHeader" xml:space="preserve">
		<value>Wertung</value>
	</data>
	<data name="KeyHeader" xml:space="preserve">
		<value>Schlüssel</value>
	</data>
	<data name="PlaintextHeader" xml:space="preserve">
		<value>Klartext</value>
	</data>
	<data name="PluginName" xml:space="preserve">
		<value>Josse-Cipher-Analyse</value>
	</data>
	<data name="Alphabet" xml:space="preserve">
		<value>Alphabet</value>
	</data>
	<data name="AlphabetInput" xml:space="preserve">
		<value>Externes Alphabet</value>
	</data>
  <data name="CipherTextInput" xml:space="preserve">
		<value>Geheimtext</value>
	</data>
	<data name="Key" xml:space="preserve">
		<value>Schlüssel</value>
	</data>
	<data name="KeyOutput" xml:space="preserve">
		<value>Schlüsselwort</value>
	</data>
	<data name="KeyOutputTooltip" xml:space="preserve">
		<value>Schlüsselwort für das Erstellen der Ersetzungstabelle.</value>
	</data>
	<data name="PlainTextOutput" xml:space="preserve">
		<value>Klartext</value>
	</data>
	<data name="UseSpacesCaption" xml:space="preserve">
		<value>Leerzeichen benutzen</value>
	</data>
	<data name="UseSpacesTooltip" xml:space="preserve">
		<value>Gibt an, ob Leerzeichen bei der Kostenfunktion genutzt werden. </value>
	</data>
	<data name="TopTenLabel" xml:space="preserve">
		<value>Top Zehn</value>
	</data>
	<data name="KeylengthCaption" xml:space="preserve">
		<value>Schlüssellänge</value>
	</data>
	<data name="LanguageCaption" xml:space="preserve">
		<value>Sprache</value>
	</data>
	<data name="CostFunctionType" xml:space="preserve">
		<value>Kostenfunktion</value>
	</data>
	<data name="AnalyzerMode" xml:space="preserve">
		<value>Analyse-Modus</value>
	</data>
	<data name="ModeAnalyzerModeHillclimbing" xml:space="preserve">
		<value>Hillclimbing</value>
	</data>
	<data name="BaseAlphabet" xml:space="preserve">
		<value>ABCDEFGHIJKLMNOPQRSTUVXYZ</value>
	</data>
	<data name="CFUnigrams" xml:space="preserve">
		<value>Unigramme</value>
	</data>
	<data name="CFTrigrams" xml:space="preserve">
		<value>Trigramme</value>
	</data>
  <data name="StartLabel" xml:space="preserve">
    <value>Startzeit</value>
  </data>
	<data name="PluginTooltip" xml:space="preserve">
		<value>Kryptoanalyse für die Josse-Cipher</value>
	</data>
	<data name="LocalLabel" xml:space="preserve">
		<value>Analyse</value>
	</data>
	<data name="EndLabel" xml:space="preserve">
		<value>Endzeit:</value>
	</data>
	<data name="ElapsedLabel" xml:space="preserve">
		<value>Vergangene Zeit:</value>
	</data>
	<data name="CostFunctionTypeTooltip" xml:space="preserve">
		<value>Aktuell analysierte Schlüssellänge:</value>
	</data>
	<data name="KeyLengthLabel" xml:space="preserve">
		<value>Schlüssellänge</value>
	</data>
	<data name="KeysLabel" xml:space="preserve">
		<value>Schlüssel/Sekunde:</value>
	</data>
	<data name="KeylengthToCaption" xml:space="preserve">
		<value>Obergrenze für die Schlüssellänge</value>
	</data>
	<data name="KeylengthToTooltip" xml:space="preserve">
		<value>Die Analyse wird angehalten, nachdem diese Schlüssellänge analysiert wurde.</value>
	</data>
	<data name="KeylengthFromCaption" xml:space="preserve">
		<value>Untergrenze für die Schlüsselänge</value>
	</data>
	<data name="KeylengthFromTooltip" xml:space="preserve">
		<value>Beginne bei dieser Schlüssellänge, wenn der Geheimtext analysiert wird.</value>
	</data>
	<data name="CFTetragrams" xml:space="preserve">
		<value>Tetragramme</value>
	</data>
	<data name="CFPentragrams" xml:space="preserve">
		<value>Pentragramme</value>
	</data>
	<data name="CFIoC" xml:space="preserve">
		<value>Koinzidenzindex </value>
	</data>
	<data name="CFHexagrams" xml:space="preserve">
		<value>Hexagramme</value>
	</data>
	<data name="CFEntropy" xml:space="preserve">
		<value>Entropie</value>
	</data>
	<data name="CipherTextInputTooltip" xml:space="preserve">
		<value>Über diesen Eingang wird der Geheimtext bereitgestellt.</value>
	</data>
	<data name="KeylengthTooltip" xml:space="preserve">
		<value>Die Obergrenze für die Schlüssellänge. Der Wert wird inklusiv behandelt.</value>
	</data>
	<data name="LanguageTooltip" xml:space="preserve">
		<value>Sprache, die für die Auswahl der N-Gramme genutzt wird.</value>
	</data>
	<data name="PlainTextOutputTooltip" xml:space="preserve">
		<value>Ausgabe des entschlüsselten Geheimtextes.</value>
	</data>
	<data name="Restarts" xml:space="preserve">
		<value>Anzahl der Wiederholungen</value>
	</data>
	<data name="RestartsTooltip" xml:space="preserve">
		<value>Bestimmt, wie oft ein neuer Schlüssel während der Ausführung gewürfelt wird. Höhere Werte sorgen hier bei längeren Schlüsseln für bessere Ergebnisse.</value>
	</data>
	<data name="ModeAnalyzerModeSimulatedAnnealing" xml:space="preserve">
		<value>Simmualted Annealing</value>
	</data>
  <data name="MessagesLabel" xml:space="preserve">
    <value>Anzahl Nachrichten</value>
  </data>
  <data name="CFBigrams" xml:space="preserve">
    <value>Bigramme</value>
  </data>
  <data name="AttackType" xml:space="preserve">
    <value>Angriffsart</value>
  </data>
  <data name="AlphabetInputTooltip" xml:space="preserve">
    <value>Das Alphabet, das von Josses-Cipher verwendet wird.</value>
  </data>
  <data name="AnalyzerModeTooltip" xml:space="preserve">
    <value>Der Modus, der zur Analyse des verschlüsselten Textes verwendet wird.</value>
  </data>
</root>